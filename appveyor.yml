cache:
  - C:\projects\learn-gfx-hal\target\debug\deps -> appveyor.yml
  - C:\projects\learn-gfx-hal\target\release\deps -> appveyor.yml


environment:
  matrix:

### MSVC Toolchains ###

  # Stable 64-bit MSVC
    - channel: stable
      target: x86_64-pc-windows-msvc
  # Stable 32-bit MSVC
    - channel: stable
      target: i686-pc-windows-msvc
  # Beta 64-bit MSVC
    - channel: beta
      target: x86_64-pc-windows-msvc
  # Beta 32-bit MSVC
    - channel: beta
      target: i686-pc-windows-msvc
  # Nightly 64-bit MSVC
    - channel: nightly
      target: x86_64-pc-windows-msvc
      #cargoflags: --features "unstable"
  # Nightly 32-bit MSVC
    - channel: nightly
      target: i686-pc-windows-msvc
      #cargoflags: --features "unstable"

### GNU Toolchains ###

  # Stable 64-bit GNU
    - channel: stable
      target: x86_64-pc-windows-gnu
  # Stable 32-bit GNU
    - channel: stable
      target: i686-pc-windows-gnu
  # Beta 64-bit GNU
    - channel: beta
      target: x86_64-pc-windows-gnu
  # Beta 32-bit GNU
    - channel: beta
      target: i686-pc-windows-gnu
  # Nightly 64-bit GNU
    - channel: nightly
      target: x86_64-pc-windows-gnu
      #cargoflags: --features "unstable"
  # Nightly 32-bit GNU
    - channel: nightly
      target: i686-pc-windows-gnu
      #cargoflags: --features "unstable"

### Allowed failures ###

# See Appveyor documentation for specific details. In short, place any channel or targets you wish
# to allow build failures on (usually nightly at least is a wise choice). This will prevent a build
# or test failure in the matching channels/targets from failing the entire build.
matrix:
  allow_failures:
    - channel: nightly
    
install:
  - ps: if (ls -r . -fi "*.rs" | sls "`t") { throw "Found tab character" }
  - ps: Start-FileDownload "https://static.rust-lang.org/dist/rust-${env:TARGET}.exe" -FileName "rust-install.exe"
  - ps: .\rust-install.exe /VERYSILENT /NORESTART /DIR="C:\rust" | Out-Null
  - ps: $env:PATH="$env:PATH;C:\rust\bin"
  - rustc -vV
  - cargo -vV

build_script:
  - cargo build --features="vulkan"
  - cargo build --features="vulkan" --release
  - cargo build --features="dx12"
  - cargo build --features="dx12" --release
